version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    image: dashboard-backend:prod
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres_password@db:5432/dashboard
      - SECRET_KEY=${SECRET_KEY:-tajny_klic_nutno_zmenit_v_produkci}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
    depends_on:
      - db
    networks:
      - app-network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: dashboard-frontend:prod
    command: ["npm", "run", "build", "&&", "npx", "serve", "-s", "build", "-l", "3000"]
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${API_URL:-http://localhost:8000}
    depends_on:
      - backend
    networks:
      - app-network
    restart: always

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=dashboard
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
